name: Monthly Job - Check customer secret rotation

on: 
  workflow_dispatch:

env:
  AZURE_CREDENTIALS: >
    {
      "clientId": "${{ secrets.ARM_CLIENT_ID }}",
      "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
      "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
      "tenantId": "${{ secrets.ARM_TENANT_ID }}"
    }
  
jobs: 
  get-customertfstate-files:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS }}

    - name: Azure CLI collect terraform state files
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az storage blob list -c tfstate-customeronboarding --account-name sacustomeronboarding0000 --query "[].name" -o json > $GITHUB_WORKSPACE/tfstatefiles.json
    
    - name: Import terraform state files to output
      id: set-matrix
      run: |
        JSON=$(cat $GITHUB_WORKSPACE/tfstatefiles.json)
        JSON="${JSON//'%'/'%25'}"
        JSON="${JSON//$'\n'/'%0A'}"
        JSON="${JSON//$'\r'/'%0D'}"
        echo "::set-output name=matrix::${JSON}"
        
  re-run-customer-deployments:
    needs: get-customertfstate-files
    runs-on: ubuntu-latest
    outputs:
      customertenantid: ${{ steps.terraformoutput.outputs.customertenantid}}
    strategy:
      matrix:
        tfstate_file: ${{fromJson(needs.get-customertfstate-files.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./Azure-Managed-Service-Customer-Onboarding

    env:
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2
      
      - name: Set customer tenant domain as env
        run: echo "CUSTOMERTENANTDOMAIN=$(echo ${{ matrix.tfstate_file }} | cut -d '.' -f 1,2,3)" >> $GITHUB_ENV


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -backend-config=storage_account_name=${{secrets.STORAGE_ACCOUNT}} -backend-config=key=${{ matrix.tfstate_file }}
      
      - name: Terraform Output
        id: terraformoutput
        run: |
          customertenantid=$(terraform output application_id)
          echo "::set-output name=customertenantid::$customertenantid"
      
      - name: Terraform Validate
        run: terraform validate
      
      # - name: Terraform Plan 
      #   run: terraform plan -var customer_tenant_id=${{ env.CUSTOMERTENANTDOMAIN }}
        
      # - name: Terraform Apply
      #   run: terraform apply -var customer_tenant_id=${{ github.event.inputs.customertenantid }} --auto-approve

      - name: Run GitHub  CLI
        run: gh repo list softcatms --json name --jq '.[]|select(.name | startswith("${{ env.CUSTOMERTENANTDOMAIN }}"))'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}